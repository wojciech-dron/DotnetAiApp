@page "/"
@rendermode InteractiveServer

<PageTitle>Nbp gold prices</PageTitle>

<div class="mb-3">
    <div class="form-floating mb-3">
        <input type="date" class="form-control" @bind="StartDate">
        <label>Start date</label>
    </div>
    <div class="form-floating mb-3">
        <input type="date" class="form-control" @bind="EndDate">
        <label>End date</label>
    </div>
    <button class="btn btn-primary" @onclick="FetchGoldPrices">Fetch gold prices</button>
</div>


@if (Result?.IsSuccess == true)
{
    <div class="mb-3">
        <h3>Results:</h3>
        <p>Start date price: @Result.StartDatePrice.ToString("F2")</p>
        <p>End date price: @Result.EndDatePrice.ToString("F2")</p>
        <p>Average price: @Result.AveragePrice.ToString("F2")</p>
    </div>
}

@if (Result?.IsSuccess == false)
{
    <div class="mb-3">
        <h3>Error occurred when fetching data</h3>
        <p>@Result.ErrorMessage</p>
    </div>
}


@inject IMediator Mediator
@using MediatR
@using NbpApp.Web.Logic

@code {
    private GoldPriceResult? Result;

    private DateOnly StartDate { get; set; } = DateOnly.FromDateTime(DateTime.Now.AddDays(-30));
    private DateOnly EndDate { get; set; } = DateOnly.FromDateTime(DateTime.Now);
    private async Task FetchGoldPrices()
    {
        var command = new GetAndSaveGoldPrices.Command(StartDate, EndDate);
        Result = await Mediator.Send(command);
    }
}